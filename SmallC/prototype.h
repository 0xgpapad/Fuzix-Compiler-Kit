extern void newline(void);
extern void output_label_prefix(void);
extern void output_label_terminator (void);
extern void trailer(void);
extern void code_segment_gtext(void);
extern void data_segment_gdata(void);
extern void ppubext(SYMBOL *scptr);
extern void fpubext(SYMBOL *scptr);
extern void output_number(int num);
extern int gen_indirected(SYMBOL *sym);
extern void gen_def_byte(void);
extern void gen_def_storage(void);
extern void gen_def_word(void);
extern int gen_defer_modify_stack(int newstkp);
extern int gen_register(int size, int typ);
extern int gen_indirected(SYMBOL *s);
extern int assemble(char *s);
extern void add_offset(int val);
extern void error(char *ptr);
extern void warning(char *ptr);
extern struct node * expression(int comma);
extern struct node *hier1(void);
extern struct node *hier1a(void);
extern struct node *hier1b(void);
extern struct node *hier1c(void);
extern struct node *hier2(void);
extern struct node *hier3(void);
extern struct node *hier4(void);
extern struct node *hier5(void);
extern struct node *hier6(void);
extern struct node *hier7(void);
extern struct node *hier8(void);
extern struct node *hier9(void);
extern struct node *hier10(void);
extern struct node *hier11(void);
extern void newfunc(void);
extern void newfunc_typed(int storage, unsigned n, int type);
extern void getarg(int t);
extern int doAnsiArguments(void);
extern void doLocalAnsiArgument(int type);
extern void oflush(void);
extern int getlabel(void);
extern void print_label(int label);
extern void glabel(unsigned lab);
extern void generate_label(int nlab);
extern int output_byte(char c);
extern void output_string(char *ptr);
extern void output_label_name(unsigned name);
extern void output_name(unsigned name);
extern void print_tab(void);
extern void output_line(char *ptr);
extern void output_with_tab(char *ptr);
extern void output_decimal(int number);
extern void test(int label, int ft);
extern void scale_const(int type, int otag, int *size);
extern void create_initials(void);
extern void add_symbol_initials(unsigned symbol_name, char type);
extern int find_symbol_initials(unsigned symbol_name);
extern void add_data_initials(unsigned symbol_name, int type, int value, TAG_SYMBOL *tag);
extern int get_size(unsigned symbol_name);
extern int get_item_at(unsigned symbol_name, int position, TAG_SYMBOL *tag);
extern int openin(char *p);
extern int openout(void);
extern void outfname(char *s);
extern void fixname(char *s);
extern int checkname(char *s);
extern void do_kill(void);
extern int igetc(int unit);
extern void pl(char *str);
extern void writee(char *str);
extern void need_semicolon(void);
extern void junk(void);
extern int endst(void);
extern void needbrack(unsigned tok);
extern int match(unsigned tok);
extern void next_token(void);
extern unsigned tokbyte(void);
extern unsigned get_type(void);
extern void compile(void);
extern void usage(void);
extern void parse(void);
extern int do_declarations(int stclass, TAG_SYMBOL *mtag, int is_struct);
extern void dumplits(void);
extern void dumpglbs(void);
extern void dump_struct(SYMBOL *symbol, int position);
extern void errorsummary(void);
extern int filename_typeof(char *s);
extern int fix_include_name (void);
extern void doinclude(void);
extern void doasm(void);
extern void dodefine(void);
extern void doundef(void);
extern void preprocess(void);
extern void doifdef(int ifdef);
extern int ifline(void);
extern void noiferr(void);
extern int cpp(void);
extern int keepch(char c);
extern void defmac(char *s);
extern void addmac(void);
extern int remove_one_line_comment(char c);
extern void delmac(int mp);
extern int putmac(char c);
extern int findmac(char *sname);
extern void toggle(char name, int onoff);
extern struct node *primary(void);
extern int constant(int val[]);
extern struct node *constant_node(int val[]);
extern int number(int val[]);
extern int quoted_char(int *value);
extern int quoted_string(int *len, unsigned *position);
extern int spechar(void);
extern struct node *callfunction(struct node *n);
extern void needlval(void);
extern int statement(int func);
extern int statement_declare(void);
extern int do_local_declares(int stclass);
extern void do_statement(void);
extern void do_compound(int func);
extern void doif(void);
extern void dowhile(void);
extern void dodo(void);
extern void dofor(void);
extern void doswitch(void);
extern void docase(void);
extern void dodefault(void);
extern void doreturn(void);
extern void dobreak(void);
extern void docont(void);
extern void dumpsw(WHILE *ws);
extern int find_tag(unsigned sname);
extern SYMBOL *find_member(unsigned info, unsigned sname);
extern void add_member(unsigned sname, unsigned type, int offset, int storage_class);
extern int define_struct(unsigned sname, int storage, int is_struct);
extern int declare_global(unsigned type, int storage, TAG_SYMBOL *mtag, int otag, int is_struct);
extern unsigned initials(unsigned symbol_name, unsigned type, int dim, int otag);
extern void struct_init(TAG_SYMBOL *tag, unsigned symbol_name);
extern int init(unsigned symbol_name, unsigned type, int *dim, TAG_SYMBOL *tag);
extern void declare_local(unsigned typ, int stclass, int otag);
extern int needsub(void);
extern int find_global (unsigned sname);
extern int find_locale (unsigned sname);
extern int add_global (unsigned sname, unsigned type, int offset, int storage);
extern int add_local (unsigned sname, unsigned type, int offset, int storage_class);
extern unsigned symname(void);
extern void illname(void);
extern void multidef(unsigned symbol_name);
extern void notvoid(int type);
extern void addwhile(WHILE *ptr);
extern void delwhile(void);
extern WHILE *readwhile(void);
extern WHILE *findwhile(void);
extern WHILE *readswitch(void);
extern void addcase(int val);
extern void defer_output(void);
extern void end_defer(void);
extern void defer_init(void);
