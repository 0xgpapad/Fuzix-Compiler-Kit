- (int *) casting syntax
- for word stacking machines add target hooks to specify that arguments
  take 2 bytes even if char, and alloc space correctly both in the func
  declaration/argument side and in the arg stacking (arg passing side done)
- rewrite x = x + .. and x = x -... etc as += -=
- char a[8] = { "foo" } needs to be handled - right now we'll try and stuff
  the pointer into it which is wrong
- Turn the frame the other way up ?
- Track register state on backend

Broken 
-	constify needs a hard stare or two
-	default: for the switch tables

Longer term
- z80 6809 style helpers for catching simpler ops and doing them via pairs
  of (ix) ops
- backend hooks for building stack frame via initializers
- literal based handling for some types (set by target) - eg double/longlong
  so that we pass pointers around including one to a memory "register". 
  &x will need care as do casts
- do we want to go to some kind of table rule parsing model over the
  current code based one ?
- look at some kind of simple register assignment rewriting so that 6803/6809
  etc can try and rewrite some subtrees to use an index register, and maybe
  also eliminate the push case for some of those
- how to deal with Z80 sanely
- simple register tracking helper library
- rewrite && and || and maybe ?: so that we don't have
  (AND (BOOL (x)) (BOOL(y))) but some kind of
  BOOL(AND(CC(x) CC(y))) and work on condition code plus a tidy if needed so
  that we can have ccode setting trees that drop the top bool if the CC is
  ok.
- 6809 - use pshs/puls as a sneaky tight way to mod the stack
- Optimizer pass for tree rearrangement ?
- Whilst we need to be careful for side effects on * 0, we don't for and/or
  subtrees with && || so should deal with those
